{"ast":null,"code":"import _defineProperty from \"/Users/arit-macmini/Documents/LavinaVyas/redux_copy/react-redux-demo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { BUY_CAKE } from './cakeTypes';\nconst initialState = {\n  numOfCakes: 10\n};\n\nconst cakeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case BUY_CAKE:\n      return _objectSpread({}, state, {\n        numOfCakes: state.numOfCakes - action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cakeReducer;","map":{"version":3,"sources":["/Users/arit-macmini/Documents/LavinaVyas/redux_copy/react-redux-demo/src/redux/cake/cakeReducer.js"],"names":["BUY_CAKE","initialState","numOfCakes","cakeReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,QAAL;AAAe,+BACVI,KADU;AAEbF,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACE;AAFzB;;AAKf;AAAS,aAAOH,KAAP;AANX;AAQD,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import { BUY_CAKE } from './cakeTypes'\n\nconst initialState = {\n  numOfCakes: 10\n}\n\nconst cakeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case BUY_CAKE: return {\n      ...state,\n      numOfCakes: state.numOfCakes - action.payload\n    }\n\n    default: return state\n  }\n}\n\nexport default cakeReducer\n"]},"metadata":{},"sourceType":"module"}